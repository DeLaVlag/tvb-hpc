<Lems
      xmlns="http://www.neuroml.org/lems/0.7.4"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.7.4 ../../LEMS/Schemas/LEMS/LEMS_v0.7.4.xsd"
      description="A number of ComponentTypes for rate based/population models.
                    Base type of any cell/population which has a (dimensionless) rate _R.
                    Epileptor 2-D (phase plane) oscillator.">

    <ComponentType name="Epileptor"
                   description="Rate based 2D oscillator for TVB"
                   value="">

        <Constant name="a" domain="" default="1.0" description="Coefficient of the cubic term in the first state-variable."/>
        <Constant name="b" domain="" default="3.0" description="Coefficient of the squared term in the first state-variable."/>
        <Constant name="c" domain="" default="1.0" description="Additive coefficient for the second state-variable x_{2}, called :math:`y_{0}` in Jirsa paper."/>
        <Constant name="d" domain="" default="5.0" description="Coefficient of the squared term in the second state-variable x_{2}."/>
        <Constant name="r" domain="lo=0.0, hi=0.001, step=0.00005" default="0.00035" description="Temporal scaling in the slow state-variable, called :math:`1\\tau_{0}` in Jirsa paper (see class Epileptor)."/>
        <Constant name="s" domain="" default="4.0" description="Linear coefficient in the third state variable"/>
        <Constant name="x0" domain="lo=-3.0, hi=-1.0, step=0.1" default="-1.6" description="Epileptogenicity parameter."/>
        <Constant name="Iext" domain="lo=1.5, hi=5.0, step=0.1" default="3.1" description="External input current to the first state-variable."/>
        <Constant name="slope" domain="lo=-16.0, hi=6.0, step=0.1" default="0." description="Linear coefficient in the first state-variable."/>
        <Constant name="Iext2" domain="lo=0.0, hi=1.0, step=0.05" default="3.1" description="External input current to the first state-variable."/>
        <Constant name="tau" domain="" default="10.0" description="Temporal scaling coefficient in fifth state variable."/>
        <Constant name="aa" domain="" default="6.0" description="Linear coefficient in fifth state variable."/>
        <Constant name="bb" domain="" default="2.0" description="Linear coefficient of lowpass excitatory coupling in fourth state variable."/>
        <Constant name="Kvf" domain="lo=0.0, hi=4.0, step=0.5" default="0.0" description="Coupling scaling on a very fast time scale."/>
        <Constant name="Kf" domain="lo=0.0, hi=4.0, step=0.5" default="0.0" description="Correspond to the coupling scaling on a fast time scale."/>
        <Constant name="Ks" domain="lo=-4.0, hi=4.0, step=0.1" default="0.0" description="Permittivity coupling, that is from the fast time scale toward the slow time scale."/>
        <Constant name="tt" domain="lo=0.001, hi=1.0, step=0.001" default="1.0" description="Time scaling of the whole system to the system in real time."/>
        <Constant name="modification" domain="" default="1.0" description="When modification is True, then use nonlinear influence on z. The default default is False, i.e., linear influence."/>

        <!-- Parameters will be assumed to be swept. sweep data will be matched by order of entry -->
        <Parameter name="global_coupling" dimension="float" />
        <Parameter name="global_speed" dimension="float" />
        <Parameter name="x0" dimension="float" />

        <Dynamics>
            <StateVariable name="x1" default="-2., 1." boundaries=""/>
            <StateVariable name="y1" default="-20., 2."/>
            <StateVariable name="z" default="-2.0, 5.0" boundaries=""/>
            <StateVariable name="x2" default="-2., 0."/>
            <StateVariable name="y2" default="0., 2." boundaries=""/>
            <StateVariable name="g" default="-1, 1."/>

<!--            <DerivedVariable name="coupling_value" exposure="c_0" value="0.0" reduce="add"/>-->
            <!-- Per state variable specifiable noise factor -->
            <DerivedVariable name="sig_x1" expression="sqrt(dt) * sqrt(2.0 * 1e-3)" />
            <DerivedVariable name="sig_y1" expression="sqrt(dt) * sqrt(2.0 * 1e-3)" />
            <DerivedVariable name="sig_z" expression="sqrt(dt) * sqrt(2.0 * 1e-3)" />
            <DerivedVariable name="sig_x2" expression="sqrt(dt) * sqrt(2.0 * 1e-3)" />
            <DerivedVariable name="sig_y2" expression="sqrt(dt) * sqrt(2.0 * 1e-3)" />
            <DerivedVariable name="sig_g" expression="0" />

            <DerivedVariable name="rec_speed_dt" expression="1.0f / global_speed / (dt)"/>
            <DerivedVariable name="lc_0" expression="0.0"/>

            <!-- For conditionals use &lt(=); or &gt;(=) for less- or greater then (equal to)  -->
            <!-- Population 1 -->
            <ConditionalDerivedVariable name="ydot0" condition="x1 &lt; 0.0" cases="-a * x1**2 + b * x1, slope - x2 + 0.6 * (z - 4)**2 "/>
            <TimeDerivative name="dx1" expression="tt * (y1 - z + Iext + Kvf * c_pop1 + (if_ydot0 + else_ydot0) )"/>
            <TimeDerivative name="dy1" expression="tt * (c - d * powf(x1, 2) - y1)"/>

            <!-- Energy -->
            <ConditionalDerivedVariable name="ydot2" condition="z &lt; 0.0" cases="- 0.1 * (z**7), 0"/>
            <ConditionalDerivedVariable name="h" condition="modification" cases="x0 + 3. / (1. + exp(-(x1 + 0.5) / 0.1)), 4 * (x1 - x0) + ydot2"/>
            <TimeDerivative name="dz" expression="tt * (r * ((ifmod_h + elsemod_h)) - z + Ks * c_pop1))"/>

            <!-- Population 2 -->
            <TimeDerivative name="dx2" expression="tt * (-y2 + x2 - powf(x2, 3) + Iext2 + bb * g - 0.3 * (z - 3.5) + Kf * c_pop2)"/>
            <ConditionalDerivedVariable name="ydot4" condition="x2 &lt; -0.25" cases="0.0, aa * (x2 + 0.25)"/>
            <TimeDerivative name="dy2" expression="tt * (-y2 + else_ydot3) / tau"/>

            <!-- Filter -->
            <TimeDerivative name="dg" expression="tt * (-0.01 * (g - 0.1 * x1) )"/>


        </Dynamics>

        <!-- Exposures are used for observables. For dimension enter the reduction functionality. Name field is not used-->
        <Exposure name="o_x1" choices="x1" default="x1"/>
        <Exposure name="o_x2" choices="x2" default="x2"/>
        <Exposure name="o_z" choices="z" default="z"/>
        <Exposure name="o_-x1+x2" choices="-x1 + x2" default="x1"/>

    </ComponentType>

    <ComponentType name="coupling_function_pop1">

<!--        Added function for pre and post synaptic activity. Fixed the power being **, however no parse checks for it-->

        <Constant name="coupl_a" domain="lo=0.0, hi=10., step=0.1" default="1" description="Rescales the connection strength."/>

        <!-- variable for pre synaptic function, only 1 param is allowed (and should be sufficient))  -->
        <Parameter name="x1_j" dimension=''/>
        <Parameter name="x1" dimension=''/>

    <Dynamics>
        <DerivedVariable name="pre" expression="sin(x1_j - x1)" description="pre synaptic function for coupling activity"/>
        <DerivedVariable name="post" expression="a" description="post synaptic = a * pre"/>
    </Dynamics>
        <!-- Handle local coupling result, full expression is c_0 *= 'value'. Name option is hardcoded -->
        <DerivedParameter name="c_pop1" value="global_coupling"/>

    </ComponentType>

        <!-- It is possible to decribe a 2nd coupling funtion, with the same as the syntax as previous. -->
        <!-- Here used to express the 2nd coupling function which is represented by the linear relation c_pop2 = g -->
        <ComponentType name="coupling_function_pop2">
            
        <!-- Handle local coupling result, full expression is c_0 *= 'value'. Name option is hardcoded -->
        <DerivedParameter name="c_pop2" value="g"/>

    </ComponentType>

    <ComponentType name="noise" description="on">

    </ComponentType>

</Lems>


